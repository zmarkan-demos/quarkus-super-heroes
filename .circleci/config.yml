version: 2.1

orbs:
  docker: circleci/docker@2.5.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

jobs:  
  jvm-build-test:
    parameters:
      project:
        type: string
    machine:
      image: ubuntu-2204:2023.10.1
    # resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "pom.xml" }}-{{ checksum "<< parameters.project >>/pom.xml"}} 
            - deps-v1-{{ checksum "pom.xml"}}-
            - deps-v1-
      - run:
          name: Build and test on the JVM
          working_directory: << parameters.project >>
          command: |
            ./mvnw -B clean verify \
              -Dquarkus.http.host=0.0.0.0 \
              -Dmaven.compiler.release=17
      - save_cache:
          key: deps-v1-{{ checksum "pom.xml" }}-{{ checksum "<< parameters.project >>/pom.xml"}} 
          paths:
            - ~/.m2/repository
      - run:
          name: Copy Surefire reports
          when: always
          command: |
            mkdir ~/surefire-reports
            cd << parameters.project >>
            cp target/surefire-reports/TEST-io* ~/surefire-reports
      - store_test_results:
          path: ~/surefire-reports
      - store_artifacts:
          path: << parameters.project >>/target/surefire-reports
      - run:
          name: Copy Failsafe reports
          when: always
          command: |
            mkdir ~/failsafe-reports
            cd << parameters.project >>
            cp target/failsafe-reports/TEST-io* ~/failsafe-reports
      - store_test_results:
          path: ~/failsafe-reports
      - store_artifacts:
          path: << parameters.project >>/target/failsafe-reports

  build-push-container-images:
    machine:
      image: ubuntu-2204:2023.10.1
    parameters:
      project:
        type: string
      java-version:
        type: string
        default: '17'
      arch: 
        type: enum
        default: amd64
        enum: [amd64, arm64]
    steps:
      - checkout
      - run: 
          name: Create container tag
          command: |
            # echo "CONTAINER_TAG=$(./compute-container-tag.sh ${{ env.APP_VERSION }} ${{ env.QUARKUS_VERSION }} "" ${{ matrix.java }} "${{ matrix.project.openai-type }}")" >> $GITHUB_ENV
            echo "CONTAINER_TAG=0.0.0.<< pipeline.number >>-jdk<< parameters.java-version >>" >> "$BASH_ENV"
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "pom.xml" }}-{{ checksum "<< parameters.project >>/pom.xml"}} 
            - deps-v1-{{ checksum "pom.xml"}}-
            - deps-v1-
      # Container image name by default taken from << parameters.project >>/src/main/resources/application.properties. Same for Container image registry and group deets
      - run:
          name: Build JVM Docker Image - << parameters.project >>
          working_directory: << parameters.project >>
          command: |
            ./mvnw -B clean package -DskipTests \
              -Dmaven.compiler.release=<< parameters.java-version >> \
              -Dquarkus.http.host=0.0.0.0 \
              -Dquarkus.container-image.build=true \
              -Dquarkus.container-image.push=false \
              -Dquarkus.container-image.registry=docker.io \
              -Dquarkus.container-image.group=zmarkan \
              -Dquarkus.container-image.name=quarkus-super-heroes-<<parameters.project>> \
              -Dquarkus.container-image.tag=$CONTAINER_TAG-<< parameters.arch >> \
              -Dquarkus.docker.dockerfile-jvm-path=src/main/docker/Dockerfile.jvm \
              -Dquarkus.docker.buildx.platform=linux/<< parameters.arch >>
      - save_cache:
          key: deps-v1-{{ checksum "pom.xml" }}-{{ checksum "<< parameters.project >>/pom.xml"}} 
          paths:
            - ~/.m2/repository
      - docker/check
      - docker/push:
          image: zmarkan/quarkus-super-heroes-<< parameters.project>>
          tag: $CONTAINER_TAG-<< parameters.arch >>

  sonar-scan-orb:
    machine: 
      image: ubuntu-2204:2023.10.1
    parameters:
      project:
        type: string
    steps:
      - checkout
      - sonarcloud/scan:
          project_root: << parameters.project >>

  sonar-scan-mvn:
    # docker:
    #   - image: 'cimg/openjdk:17.0'
    machine:
      image: ubuntu-2204:2023.10.1
    parameters:
      project:
        type: string
    steps:
      - checkout
      - run:
          name: Run Sonar scan
          working_directory: << parameters.project >>
          command: |
            ./mvnw -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184:sonar -Pit-coverage \
              -Dquarkus.http.host=0.0.0.0 \
              -Dmaven.compiler.release=17 \
              -Dquarkus.package.write-transformed-bytecode-to-build-output=true \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.organization=zmarkan-demos \
              -Dsonar.projectKey=zmarkan-demos-quarkus-super-heroes-<< parameters.project>> \
              -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco-report/jacoco.xml \
              -Dsonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports
      

      # - name: Sonar scan (Non-ui project)
      #   if: matrix.project != 'ui-super-heroes'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   working-directory: ${{ matrix.project }}
      #   run: |
      #     ./mvnw -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pit-coverage \
      #       -Dquarkus.http.host=0.0.0.0 \
      #       -Dmaven.compiler.release=${{ env.BASE_JAVA_VERSION }} \
      #       -Dquarkus.package.write-transformed-bytecode-to-build-output=true \
      #       -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            # -Dsonar.organization=${{ env.SONAR_ORG }} \
      #       -Dsonar.projectKey=${{ env.SONAR_ORG }}_${{ matrix.project }} \
      #       -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco-report/jacoco.xml \
      #       -Dsonar.junit.reportPaths=target/surefire-reports,target/failsafe-reports

      
workflows:
  build_and_test:
    jobs:
      - jvm-build-test:
          name: jvm-build-test-<< matrix.project >>
          matrix:
            parameters:
              project:
                - event-statistics
                - rest-fights
                - rest-heroes
                - rest-villains
                - rest-narration
                - grpc-locations
                - ui-super-heroes
      - build-push-container-images:
          name: build-push-container-image-<< matrix.project >>
          requires:
            - jvm-build-test-<< matrix.project >>
            # - sonar-scan-mvn-<< matrix.project >>
          matrix:
            parameters:
              project: 
                - event-statistics
                - rest-fights
                - rest-heroes
                - rest-villains
                - rest-narration
                - grpc-locations
                - ui-super-heroes  
          context: 
            - docker_hub   

      # Disable sonar for now
      # - sonar-scan-orb:
      #     matrix:
      #       parameters:
      #         project: 
      #           # - event-statistics
      #           # - rest-fights
      #           - rest-heroes
      #           # - rest-villains
      #           # - rest-narration
      #           # - grpc-locations
      #           # - ui-super-heroes  
      #     context: 
      #       - SonarCloud
      
      - sonar-scan-mvn:
          matrix:
            parameters:
              project: 
                # - event-statistics
                # - rest-fights
                - rest-heroes
                # - rest-villains
                # - rest-narration
                # - grpc-locations
                # - ui-super-heroes
          context:
            - SonarCloud

      # - jvm_build_test_rest-fights
      # - jvm_build_test_rest-heroes
      # - jvm-container-build-test_rest-heroes